/* eslint-disable @typescript-eslint/no-explicit-any */
import type { NextPage } from 'next'
import Head from 'next/head'
import { useEffect, useState } from 'react'
import InfiniteScroll from 'react-infinite-scroll-component'
import NavbarTwo from '~/components/features/navbars/NavbarTwo'
import Image from 'next/image'
import ALink from '~/components/features/ALink'

const Activity: NextPage = () => {
    const [data, setData] = useState<any>([])
    const [typeList, setTypeList] = useState<string[]>([])
    const [hasMore, setHasMore] = useState(true)
    const [page, setPage] = useState(0)
    const perPage = 12

    useEffect(() => {
        const customUrl =
            process.env.NEXT_PUBLIC_SERVER_URL +
            'api/events?perPage=' +
            perPage +
            '&page=' +
            page.toString() +
            typeList
                .reduce((acc: string, cur: string) => {
                    return acc + '&filters=' + cur.toUpperCase()
                }, '&')
                .toString()

        const fetcher = async (servicUrl: RequestInfo) =>
            await fetch(servicUrl)
                .then((res) => res.json())
                .then((res) => {
                    if (res.events && res.events.length > 0) {
                        if (page == 0) {
                            setData([...res.events])
                        } else {
                            setData([...data, ...res.events])
                        }

                        setHasMore(res.hasMore)
                    }
                })
        fetcher(customUrl)
    }, [page, typeList])

    const handleTypeClick = (type: string) => {
        if (typeList.includes(type)) {
            setTypeList(
                typeList.reduce((acc: string[], cur: string) => {
                    if (cur == type) return acc
                    else return [...acc, cur]
                }, [])
            )
        } else {
            setTypeList([...typeList, type])
        }

        setPage(0)
    }

    const scrollHandler = () => {
        if (hasMore) {
            setPage(page + 1)
        }
    }

    const clearAll = () => {
        setTypeList([])
        setPage(0)
    }

    return (
        <div>
            <Head>
                <title>Jaypigs Activity</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className="my-8 min-h-screen px-4 md:flex">
                <NavbarTwo
                    typeList={typeList}
                    handleTypeClick={handleTypeClick}
                />
                <div className="flex-1">
                    <div className="mb-4 flex min-h-[76px] items-center rounded-lg border border-solid border-dark-100 py-4 px-4 dark:border-dark-400">
                        <span className="mr-4">Filters:</span>
                        {typeList.map((item, index) => (
                            <span
                                className="mr-2 flex items-center rounded-lg border border-dark-100 py-2 px-3 text-center dark:border-dark-400 dark:bg-dark-400"
                                key={index}
                            >
                                {item}
                                <svg
                                    viewBox="0 0 512 512"
                                    focusable="false"
                                    className="ml-2 h-4 w-4 cursor-pointer"
                                    onClick={() => handleTypeClick(item)}
                                >
                                    <path
                                        fill="currentColor"
                                        d="M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z"
                                    ></path>
                                </svg>
                            </span>
                        ))}
                        {typeList.length > 0 && (
                            <span
                                className="mr-2 cursor-pointer rounded-lg border border-dark-100 py-2 px-3 text-center  dark:border-pink-400 dark:bg-pink-400"
                                onClick={() => clearAll()}
                            >
                                Clear All
                            </span>
                        )}
                    </div>
                    <div className="border border-dark-100 dark:border-dark-400">
                        <InfiniteScroll
                            dataLength={data.length}
                            next={scrollHandler}
                            hasMore={hasMore}
                            loader={
                                <table className="w-full">
                                    <tbody>
                                        {new Array(10)
                                            .fill(10)
                                            .map((item, index) => (
                                                <tr
                                                    className="cursor-pointer border-b border-dark-100 transition duration-300 ease-in-out dark:border-dark-300 dark:bg-dark-400 hover:dark:bg-dark-300"
                                                    key={index}
                                                >
                                                    <th className="px-6 py-4">
                                                        <div className="h-4 w-4 animate-pulse rounded-sm bg-gray-600"></div>
                                                    </th>
                                                    <td className="whitespace-nowrap px-6 py-4">
                                                        <div className="flex items-center">
                                                            <div className="h-8 w-8 animate-pulse rounded-sm bg-gray-600"></div>
                                                            <h3 className="ml-3 text-lg font-medium">
                                                                <div className="h-4 w-32 animate-pulse rounded-sm bg-gray-600"></div>
                                                            </h3>
                                                        </div>
                                                    </td>
                                                    <td className="whitespace-nowrap px-6 py-4">
                                                        <div className="text-sm">
                                                            <div className="mb-2 h-4 w-8 animate-pulse rounded-sm bg-gray-600"></div>
                                                        </div>
                                                        <div className="flex items-center">
                                                            <div className="h-4 w-12 animate-pulse rounded-sm bg-gray-600"></div>
                                                        </div>
                                                    </td>
                                                    <td className="whitespace-nowrap px-6 py-4">
                                                        <div className="text-sm">
                                                            <div className="mb-2 h-4 w-8 animate-pulse rounded-sm bg-gray-600"></div>
                                                        </div>
                                                        <div className="flex items-center">
                                                            <div className="h-4 w-12 animate-pulse rounded-sm bg-gray-600"></div>
                                                        </div>
                                                    </td>
                                                    <td className="whitespace-nowrap px-6 py-4">
                                                        <div className="text-sm">
                                                            <div className="mb-2 h-4 w-8 animate-pulse rounded-sm bg-gray-600"></div>
                                                        </div>
                                                        <div className="flex items-center">
                                                            <div className="h-4 w-12 animate-pulse rounded-sm bg-gray-600"></div>
                                                        </div>
                                                    </td>
                                                    <td className="whitespace-nowrap px-6 py-4">
                                                        <div className="text-sm">
                                                            <div className="mb-2 h-4 w-8 animate-pulse rounded-sm bg-gray-600"></div>
                                                        </div>
                                                        <div className="flex items-center">
                                                            <div className="h-4 w-12 animate-pulse rounded-sm bg-gray-600"></div>
                                                        </div>
                                                    </td>
                                                </tr>
                                            ))}
                                    </tbody>
                                </table>
                            }
                        >
                            {data.map((event: any, index: number) => (
                                <div
                                    className="flex flex-wrap border-b border-dark-100 transition duration-300 ease-in-out dark:border-dark-300 dark:bg-dark-400 hover:dark:bg-dark-300"
                                    key={index}
                                >
                                    <div className="whitespace-nowrap px-6 py-4">
                                        <div className="flex items-center">
                                            <Image
                                                className="h-10 w-10 rounded-full"
                                                src="/server/collection1.png"
                                                alt="collection"
                                                width={40}
                                                height={40}
                                            />
                                        </div>
                                    </div>
                                    <div className="whitespace-nowrap px-6 py-4">
                                        <div className="flex items-center">
                                            <ALink
                                                href={
                                                    '/collection/' +
                                                    event.collection.address +
                                                    '/' +
                                                    (event.token
                                                        ? event.token.tokenId
                                                        : '')
                                                }
                                                className="mr-3 text-sm font-medium dark:text-white"
                                            >
                                                {event.token?.name}
                                            </ALink>
                                            {event.type == 'LIST' ? (
                                                <span className="flex items-center rounded-full border border-[#A2191F] px-2 text-sm font-medium text-[#A2191F]">
                                                    <svg
                                                        viewBox="0 0 32 32"
                                                        focusable="false"
                                                        className="mr-2 h-3 w-3"
                                                    >
                                                        <path
                                                            fillRule="evenodd"
                                                            clipRule="evenodd"
                                                            d="M2 16C2 8.26801 8.26801 2 16 2C23.732 2 30 8.26801 30 16C30 23.732 23.732 30 16 30C8.26801 30 2 23.732 2 16ZM16 4C22.6274 4 28 9.37258 28 16C28 22.6274 22.6274 28 16 28C9.37258 28 4 22.6274 4 16C4 9.37258 9.37258 4 16 4ZM22 15H17V10H15V15H10V17H15V22H17V17H22V15Z"
                                                            fill="currentColor"
                                                        ></path>
                                                    </svg>
                                                    List
                                                </span>
                                            ) : event.type == 'OFFER' ? (
                                                <span className="flex items-center rounded-full border border-[#0BC355] px-2 text-sm font-medium text-[#0BC355]">
                                                    <svg
                                                        viewBox="0 0 32 32"
                                                        focusable="false"
                                                        className="mr-2 h-3 w-3"
                                                    >
                                                        <path
                                                            fillRule="evenodd"
                                                            clipRule="evenodd"
                                                            d="M15.9997 17V18H13.9997V7.5C13.9997 6.94772 13.552 6.5 12.9997 6.5C12.4475 6.5 11.9997 6.94772 11.9997 7.5V21.9638L6.80648 18.1869C6.27698 17.8018 5.53034 17.962 5.2055 18.5305C4.94939 18.9787 5.03964 19.5447 5.42242 19.891L13.8521 27.5179C14.1951 27.8282 14.6411 28 15.1035 28H21.2272C23.863 28 25.9997 25.8633 25.9997 23.2274V12C25.9997 11.4477 25.552 11 24.9997 11C24.4494 11 24.0029 11.4445 23.9998 11.9941V18H23.9997H21.9998H21.9997V12L21.9998 11.9897V7C21.9998 6.44772 21.552 6 20.9998 6C20.4475 6 19.9998 6.44772 19.9998 7V16.5V18H17.9998V16.5V7V5C17.9998 4.44772 17.552 4 16.9998 4C16.4475 4 15.9998 4.44772 15.9998 5V17H15.9997ZM19.8947 4.21009C20.2367 4.07452 20.6095 4 20.9998 4C22.6566 4 23.9998 5.34315 23.9998 7V9.1707C24.3125 9.06015 24.6491 9 24.9997 9C26.6566 9 27.9997 10.3431 27.9997 12V23.2274C27.9997 26.9678 24.9676 30 21.2272 30H15.1035C14.1452 30 13.221 29.644 12.5103 29.001L4.08059 21.3741C3.00138 20.3977 2.74694 18.8018 3.46901 17.5382C4.38486 15.9355 6.48994 15.4837 7.98283 16.5694L9.99974 18.0362V7.5C9.99974 5.84315 11.3429 4.5 12.9997 4.5C13.3568 4.5 13.6993 4.56239 14.017 4.67685C14.1781 3.17197 15.4521 2 16.9998 2C18.3832 2 19.548 2.93647 19.8947 4.21009Z"
                                                            fill="currentColor"
                                                        ></path>
                                                    </svg>
                                                    Offer
                                                </span>
                                            ) : event.type == 'MINT' ? (
                                                <span className="flex items-center rounded-full border border-[#D2A106] px-2 text-sm font-medium text-[#D2A106]">
                                                    <svg
                                                        viewBox="0 0 32 32"
                                                        focusable="false"
                                                        className="mr-2 h-3 w-3"
                                                    >
                                                        <path
                                                            fillRule="evenodd"
                                                            clipRule="evenodd"
                                                            d="M20.2426 11.7574L16 1L11.7574 11.7574L1 16L11.7574 20.2426L16 31L20.2426 20.2426L31 16L20.2426 11.7574ZM25.5488 16L18.7008 13.2992L16 6.45121L13.2992 13.2992L6.45121 16L13.2992 18.7008L16 25.5488L18.7008 18.7008L25.5488 16Z"
                                                            fill="currentColor"
                                                        ></path>
                                                    </svg>
                                                    Mint
                                                </span>
                                            ) : event.type == 'TRANSFER' ? (
                                                <span className="flex items-center rounded-full border border-[#78A9FF] px-2 text-sm font-medium text-[#78A9FF]">
                                                    <svg
                                                        viewBox="0 0 32 32"
                                                        focusable="false"
                                                        className="mr-2 h-3 w-3"
                                                    >
                                                        <path
                                                            fillRule="evenodd"
                                                            clipRule="evenodd"
                                                            d="M11.41 26.59L7.83 23H28V21H7.83L11.41 17.41L10 16L4 22L10 28L11.41 26.59ZM28 10L22 4L20.59 5.41L24.17 9H4V11H24.17L20.59 14.59L22 16L28 10Z"
                                                            fill="currentColor"
                                                        ></path>
                                                    </svg>
                                                    Transfer
                                                </span>
                                            ) : (
                                                ''
                                            )}
                                        </div>
                                        <div className="flex flex-wrap items-center">
                                            <span className="mr-4 dark:text-gray-400">
                                                From{' '}
                                                <ALink
                                                    className="font-bold dark:text-white"
                                                    href={
                                                        '/accounts/' +
                                                        event.from.address
                                                    }
                                                >
                                                    2E0cE5
                                                </ALink>
                                            </span>
                                            <span className="mr-4 dark:text-gray-400">
                                                9 hours ago{' '}
                                            </span>
                                            <span className="mr-4 dark:text-gray-400">
                                                Expiring in 6 months
                                            </span>
                                        </div>
                                    </div>
                                    <div className="ml-auto whitespace-nowrap px-6 py-4">
                                        <div className="flex items-center">
                                            <svg
                                                viewBox="0 0 48 96"
                                                focusable="false"
                                                className="mr-1 h-5 w-2.5"
                                            >
                                                <path
                                                    d="M23.9932 8.91386L23.4688 10.6953V62.3843L23.9932 62.9075L47.9862 48.725L23.9932 8.91386Z"
                                                    fill="#767676"
                                                ></path>
                                                <path
                                                    d="M23.9936 8.91386L0 48.725L23.9936 62.9075V37.8191V8.91386Z"
                                                    fill="#8E8E8E"
                                                ></path>
                                                <path
                                                    d="M23.9914 67.4523L23.6958 67.8128V86.2251L23.9914 87.088L47.9991 53.2772L23.9914 67.4523Z"
                                                    fill="#5F5F5F"
                                                ></path>
                                                <path
                                                    d="M23.9936 87.088V67.4523L0 53.2772L23.9936 87.088Z"
                                                    fill="#8E8E8E"
                                                ></path>
                                                <path
                                                    d="M23.9937 62.9066L47.9867 48.7242L23.9937 37.8183V62.9066Z"
                                                    fill="#5F5F5F"
                                                ></path>
                                                <path
                                                    d="M0 48.7242L23.9936 62.9066V37.8183L0 48.7242Z"
                                                    fill="#767676"
                                                ></path>
                                            </svg>
                                            <span className="font-medium">
                                                {event.collection.floorOrder &&
                                                    event.collection.floorOrder
                                                        .price /
                                                        1000000000000000000}
                                            </span>
                                        </div>
                                        <div className="text-sm">
                                            Current floor
                                        </div>
                                    </div>
                                </div>
                            ))}
                        </InfiniteScroll>
                    </div>
                </div>
            </main>
        </div>
    )
}

export default Activity
